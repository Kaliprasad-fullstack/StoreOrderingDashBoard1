
@{
    ViewBag.Title = "TopItemList";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="right_col" role="main">
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Top Item List</h2>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <form id="TopItemListFilter">
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <div class="col-md-3 col-sm-6 col-xs-12">
                                <label>SKU Type</label>
                                @Html.ListBox("SelectedTypes", (MultiSelectList)ViewBag.ItemTypes, new { size = 4, @class = "form-control" })
                                <p class="text text-danger" style="margin-top:5px;" id="SelectedTypesError"></p>
                                @Html.Hidden("SelectedTopItems", (int)ViewBag.SelectedTopItems)
                            </div>
                            <div class="col-md-3 col-sm-6 col-xs-12">
                                <label>SKU Category</label>
                                @Html.ListBox("SelectedCategories", (MultiSelectList)ViewBag.ItemCategories, new { size = 4, @class = "form-control" })
                                <p class="text text-danger" style="margin-top:5px;" id="SelectedCategoriesError"></p>
                            </div>
                            <div class="col-md-3 col-sm-6 col-xs-12">
                                <div class="form-group text-right">
                                    <button class="search btn btn-success btn-sm" id="SearchBtn" style="margin-bottom:0px;margin-top:25px;" type="button">Search</button>
                                </div>
                            </div>
                        </div>
                    </form>
                    <div class="bs-example" id="errorlog" style="display:none;">
                        <div class="alert alert-warning alert-dismissible " role="alert">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                            <h4 class="alert-heading"><i class="fa fa-warning"></i> Error Log</h4><hr>
                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <table id="TopItemList" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>SKU Code</th>
                                <th>SKU Description</th>
                                <th><input name="select_all" value="1" type="checkbox"></th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="x_content">
                    <div class="buttons">
                        <!-- Standard button -->
                        <div class="row">
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                <button type="button" class="btn btn-sm btn-success pull-left" onclick="SaveTopItemList()">Update Top Item List</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    var TopItemList;
    function SaveTopItemList() {
        var SelectedTypes = $("#SelectedTypes").val();
        var SelectedCategories = $("#SelectedCategories").val();
        var SelectedTopItems = $("#SelectedTopItems").val();
        var items = $.map(TopItemList.rows().data(), function (item) {
                return {
                    Item_Id: item.Item_Id,
                    Checked: item.Checked,
                };
        });
        $.ajax({
                url: "@Url.Action("UpdateTopItemList", "Order")",
                type: "POST",
                data: {
                    "Items": items,
                    "SelectedItemType": SelectedTypes,
                    "SelectedItemcategories": SelectedCategories,
                    "Id": SelectedTopItems
                },
                success: function (response) {
                        if (response) {
                            alert("ItemList Updated.");                            
                        }
                    }
                });
    }
    $(document).ready(function () {
        var ErrorCount ='@(ViewBag.ErrorCount != null ? ViewBag.ErrorCount : 0)';
        if (ErrorCount > 0 && ErrorCount != null && ErrorCount != undefined) {
            $("#errorlog").show();
        }
        $(".loader").hide();
        var SelectedTypes = $("#SelectedTypes").val();
        var SelectedCategories = $("#SelectedCategories").val();
        var SelectedTopItems = $("#SelectedTopItems").val();
        var rows_selected = [];
        TopItemList = $("#TopItemList").DataTable({
            "scrollY": '100vh',
            "scrollCollapse": true,
            dom: 'l<"toolbar">frtip',
            "searching": false,
            "paging": false,
            "ordering": true,
            "order": [[1, "asc"]],
            "ajax": {
                "url": '@Url.Action("GetTopItemList", "Order")',
                "type": "post",
                "dataType": "JSON",
                "data":{
                    "SelectedItemType": SelectedTypes,
                    "SelectedItemcategories": SelectedCategories,
                    "Id": SelectedTopItems
                }
            },
            "columns": [
                            {
                                "data": "Item Code", "autoWidth": true,
                                render: function (data, type, row, meta) {
                                    return row.SKUCode;
                                }
                            },
                            {
                                "data": "Item Name", "autoWidth": true,
                                render: function (data, type, row, meta) {
                                    return row.SKUName ;
                                }
                            },
                            {
                                "data": "Item Name", "autoWidth": true,
                                render: function (data, type, row, meta) {
                                    return '<input type="checkbox" Id="' + row.Item_Id + '" ' + (row.Checked == true ? 'checked':'' )+ '>'
                                }
                            }
            ],
            "initComplete": function (settings, json) {
                updateDataTableSelectAllCtrl(TopItemList);
            },
            "rowCallback": function (row, data, dataIndex) {
                // Get row ID
                var rowId = data.Id;
                if (data.Checked) {
                    $(row).find('input[type="checkbox"]').prop('checked', true);
                    $(row).addClass('selected');
                }
                //updateDataTableSelectAllCtrl(TopItemList);
            },
        });
        $('thead input[name="select_all"]', TopItemList.table().container()).on('click', function (e) {
            if (this.checked) {
                $('#TopItemList tbody').find('td input:checkbox').prop('checked', this.checked);
                $('#TopItemList tbody').find('tr').addClass('selected');
                //GetSelectedDataCount();
                $.map(TopItemList.rows().data(), function (item) {
                    item.Checked = true;
                });

            } else {
                $('#TopItemList tbody').find('td input:checkbox').prop('checked', this.checked);
                $('#TopItemList tbody').find('tr').removeClass('selected');
                //GetSelectedDataCount();
                $.map(TopItemList.rows().data(), function (item) {
                    item.Checked = false;
                });
            }
            // Prevent click event from propagating to parent
            updateDataTableSelectAllCtrl(TopItemList);
            e.stopPropagation();
        })
        $('#TopItemList tbody').on('click', 'input[type="checkbox"]', function (e) {
            var $row = $(this).closest('tr');
            var data = TopItemList.row($row).data();
            var ItemId = data.Item_Id;
            if (this.checked) {
                $row.addClass('selected');
                $.map(TopItemList.rows().data(), function (item) {
                    if (item.Item_Id === ItemId) {
                        item.Checked = true;
                    }
                });
            } else {
                $row.removeClass('selected');
                $.map(TopItemList.rows().data(), function (item) {
                    if (item.Item_Id === ItemId) {
                        item.Checked = false;
                    }
                });
            }
            updateDataTableSelectAllCtrl(TopItemList)
            e.stopPropagation();
        });
        function updateDataTableSelectAllCtrl(table) {
            var $table = table.table().node();
            var $chkbox_all = $('tbody input[type="checkbox"]', $table);
            var $chkbox_checked = $('tbody input[type="checkbox"]:checked', $table);
            var chkbox_select_all = $('thead input[name="select_all"]', $table).get(0);
            //var items = $.map(table.rows('.selected').data(), function (item) {
            //    return item.AutoAllocatedQty;
            //});
            // If none of the checkboxes are checked
            if ($chkbox_checked.length === 0) {
                //chkbox_select_all.checked = false;
                $('thead input[name="select_all"]').prop('checked', false);
                if ('indeterminate' in chkbox_select_all) {
                    //chkbox_select_all.indeterminate = false;
                }
                // If all of the checkboxes are checked
            } else if ($chkbox_checked.length === $chkbox_all.length) {
                //chkbox_select_all.checked = true;
                $('thead input[name="select_all"]').prop('checked', true);
                if ('indeterminate' in chkbox_select_all) {
                    //chkbox_select_all.indeterminate = false;
                }

                // If some of the checkboxes are checked
            } else {
                //chkbox_select_all.checked = false;
                $('thead input[name="select_all"]').prop('checked', false);
                if ('indeterminate' in chkbox_select_all) {
                    //chkbox_select_all.indeterminate = true;
                }
            }
            $("div.toolbar").html('<b>TOTAL ROW COUNT: ' + table.rows().count() + ',   SELECTED ROWS: ' + $chkbox_checked.length + ' </b>');
        }

        $('#SelectedCategories').multiselect({
            includeSelectAllOption: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '100%',
            maxHeight: 150,
            enableFiltering: true
        });

        $('#SelectedTypes').multiselect({
            includeSelectAllOption: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '100%',
            maxHeight: 150,
            enableFiltering: true
        });

        $("#SelectedTypes").change(function () {
                var SelectedItemTypes = $(this).val()
                $.ajax({
                    url: '@Url.Action("GetCatgoriesForItemTypes", "Order")',
                    type: 'POST',
                    dataType: "JSON",
                    data: {
                        "SelectedItemTypes": SelectedItemTypes
                    },
                    success: function (result) {
                        $("#SelectedCategories").html("");
                        var markup = "";
                        for (var x = 0; x < result.data.length; x++) {
                            markup += "<option value=" + result.data[x].Id + ">" + result.data[x].CategoryName + "</option>";
                        }
                        $("#SelectedCategories").html(markup);
                        $("#SelectedCategories").multiselect('destroy');
                        $('#SelectedCategories').multiselect({
                            includeSelectAllOption: true,
                            enableCaseInsensitiveFiltering: true,
                            buttonWidth: '100%',
                            maxHeight: 150,
                            enableFiltering: true
                        });
                        $("#SelectedCategories").trigger("change");
                    },
                    error: function (reponse) {
                        alert("error : " + reponse)
                    },
                });
            });
    });

        function ValidateData(data) {
            var objs = [], temp;
            var temps = data.split('&');
            for (var i = 0; i < temps.length; i++) {
                temp = temps[i].split('=');
                if (temp[1] > 0 && temp[1] != undefined)
                    return true;
            }
        }
        function AddNew() {
        $(".loader").show();
            var tableinfo = TopItemList.page.info();
            total = tableinfo.recordsTotal
            productlist = [];
            for (i = 0; i < total; i++){
                var data = TopItemList.cell(i, 6).nodes().to$().find('input').val()
                if (parseInt(data) > 0){
                    var da = TopItemList.row(i).data();
                    var product = {};
                    product.ProductId = parseInt(da.Id);
                    product.Qty = data;
                    product.ItemCode = da.SKUCode;
                    product.ItemDesc = da.SKUName;
                    productlist.push(product);
                }
            }
            if (productlist.length > 0){
            $.ajax({
                url: "@Url.Action("SaveOrFinaliseOrder", "Order")",
                type: "POST",
                data: {
                        "order": productlist,
                    "issave": "Save"
                },
                success: function (response) {
                        if (response) {
                            productlist = [];
                            alert("ORDER SAVED AS DRAFT.");
                            window.location.href = '@Url.Action("OrderNew", "Order")';
                        }
                    }
                });
            }
            else {
                alert("PLEASE SELECT ORDER");
            }
        }

</script>