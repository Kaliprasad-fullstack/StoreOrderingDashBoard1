@using DAL
@using StoreOrderingDashBoard.Models
@{
    ViewBag.Title = "OrderNew";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int storeId = SessionValues.StoreId;
    int UserId = SessionValues.UserId;
    string MkrChkrFlag = SessionValues.MkrChkrFlag;
}

<!-- /top navigation -->
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<!-- page content -->
<style>
    .questions {
        display: none;
        background: #144069;
        position: absolute;
        z-index: 100;
        color: #EEE;
        margin-top: 20px;
        width: auto;
        min-height: 112px;
    }

    .question {
        max-width: 500px;
        min-width: 100px;
        padding: 28px 10px 10px 10px;
        font-size: 18px;
        font-weight: bold;
        text-align: center;
    }

        .question p {
            margin: 0;
            padding: 0;
        }

    .SKUModalclose {
        font-size: 22px;
        cursor: pointer;
        position: absolute;
        right: 10px;
        top: 5px;
    }
</style>
<div class="right_col" role="main">
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Create New Order</h2>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <form id="SearchForm" action="@Url.Action("OrderNew", "Order")" method="post">
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <div class="col-md-3 col-sm-6 col-xs-12">
                                <label>SKU Type</label>
                                @Html.ListBox("SelectedTypes", (MultiSelectList)ViewBag.ItemTypes, new { size = 4, @class = "form-control" })
                                <p class="text text-danger" style="margin-top:5px;" id="SelectedTypesError"></p>
                            </div>
                            <div class="col-md-3 col-sm-6 col-xs-12">
                                <label>SKU Category</label>
                                @Html.ListBox("SelectedCategories", (MultiSelectList)ViewBag.ItemCategories, new { size = 4, @class = "form-control" })
                                <p class="text text-danger" style="margin-top:5px;" id="SelectedCategoriesError"></p>
                            </div>
                            <div class="col-md-3 col-sm-6 col-xs-12">
                                <label>Top SKUs</label>
                                @Html.ListBox("SelectedTopItems", (MultiSelectList)ViewBag.ToplistItems, new { size = 4, @class = "form-control" })
                                <p class="text text-danger" style="margin-top:5px;" id="SelectedItemsError"></p>
                            </div>
                            <div class="col-md-3 col-sm-6 col-xs-12">
                                <label>Brand</label>
                                @Html.ListBox("SelectedBrand", (MultiSelectList)ViewBag.Brands, new { size = 4, @class = "form-control" })
                                <p class="text text-danger" style="margin-top:5px;" id="SelectedBrandError"></p>
                            </div>
                            <div class="col-md-3 col-sm-6 col-xs-12">
                                <div class="form-group text-right">
                                    <button class="search btn btn-success btn-sm" id="SearchBtn" style="margin-bottom:0px;margin-top:25px;" type="submit">Search</button>
                                </div>
                            </div>
                        </div>
                    </form>
                    <div class="bs-example" id="errorlog" style="display:none;">
                        <div class="alert alert-warning alert-dismissible " role="alert">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                            <h4 class="alert-heading"><i class="fa fa-warning"></i> Error Log</h4><hr>
                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <table id="datatable12" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>SKU Code</th>
                                <th>SKU Description</th>
                                <th>SKU Category</th>
                                <th>Brand</th>
                                <th>UOM</th>
                                <th>MOQ</th>
                                <th>Case Size </th>
                                <th>Quantity</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="x_content">
                    <div class="buttons">
                        <!-- Standard button -->
                        <div class="row">
                            <div class="col-md-4 col-sm-4 col-xs-12">
                                <button type="button" class="btn btn-success pull-left" onclick="ViewOrder()">View Draft</button>
                            </div>
                            <div class="col-md-4 col-sm-4 col-xs-12 pull-right input-group">
                                <button type="button" class="btn btn-primary " onclick="AddNew()" data-dismiss="modal">Save as Draft</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="questions">
    <div class="SKUModalclose">
        <i class="fa fa-times"></i>
    </div>
    <div class="question">
        <img src="" style="height:100%;width:275px;" id="ItemImage" alt="Image Not Found" />
    </div>
</div>
<script>
    var CreateOrdertable;
    function showQuestion(button, SKUCode) {
        var offset = button.offset();
        var imagepath = "/images/SKUCode/" + SKUCode + ".jpg";
        $("#ItemImage").attr("src", imagepath);
        $('.questions')
            .fadeIn()
            .css({
                left: Math.min(offset.left, $(window).innerWidth() - $('.questions').outerWidth()),
                top: offset.top + button.innerHeight()
            });
    }
    $(document).ready(function () {
        var ErrorCount ='@(ViewBag.ErrorCount != null ? ViewBag.ErrorCount : 0)';
        if (ErrorCount > 0 && ErrorCount != null && ErrorCount != undefined) {
            $("#errorlog").show();
        }
        $(".loader").hide();
        var SelectedTypes = $("#SelectedTypes").val();
        var SelectedCategories = $("#SelectedCategories").val();
        var SelectedTopItems = $("#SelectedTopItems").val();
        var SelectedBrand = $("#SelectedBrand").val();
        CreateOrdertable = $("#datatable12").DataTable({
                         "ajax": {
                            "url": '@Url.Action("GetItemsForOrder", "Order")',
                            "type": "post",
                             "dataType": "JSON",
                             "data": {
                                 "SelectedTypes": SelectedTypes,
                                 "SelectedCategories": SelectedCategories,
                                 "SelectedTopItems": SelectedTopItems,
                                 "SelectedBrand": SelectedBrand
                             }
                         },
                        "ordering": true,
                        "order": [[1,"asc"]],
                        "columns": [
                            {
                                "data": "Item Code", "autoWidth": true,
                                render: function (data, type, row, meta) {
                                    return row.SKUCode;
                                }
                            },
                            {
                                "data": "Item Name", "autoWidth": true,
                                render: function (data, type, row, meta) {
                                    return row.SKUName ;
                                }
                            },
                            {
                                "data": "Category", "autoWidth": true,
                                render: function (data, type, row, meta) {
                                    return  row.CaseConversion  ;
                                }
                            },
                            {
                                "data": "Brand", "autoWidth": true,
                                render: function (data, type, row, meta) {
                                    return row.BrandName;
                                }
                            },
                            {
                                "data": "UOM", "autoWidth": true,
                                render: function (data, type, row, meta) {
                                    return row.UnitofMasureDescription;

                                }
                            },
                            {
                                "data": "MOQ", "autoWidth": true,
                                render: function (data, type, row, meta) {
                                    return row.MinimumOrderQuantity ;
                                }
                            },
                            {
                                "data": "Case Size", "autoWidth": true,
                                render: function (data, type, row, meta) {
                                    return row.CaseSize;
                                }
                            },
                            {
                                "data": "Quantity", "autoWidth": true,
                                render: function (data, type, row, meta) {
                                    return "<input type='number' id='Qty" + row.Id + "' step='" + row.MinimumOrderQuantity + "' min='0' onblur='CheckQty(" + (row.MaximumOrderLimit === 0 || row.MaximumOrderLimit === null ? 0 : row.MaximumOrderLimit) + "," + row.Id + "," + parseInt(row.CaseSize) + ", " + "0," + row.MinimumOrderQuantity + ",\"" + row.UnitofMasureDescription+"\" )' value=" + 0 + " class='form-control input-sm qty-5' >";
                                }
                            }
                            ],
                        "paging": true,
                        "searching": true
        });
        $(".loader").hide();
        dt = $('#datatable12').DataTable().rows().iterator('row', function (context, index) {

            var node = $(this.row(index).node());
        });
        //$('#datatable12 tbody').on('mouseover', '.trends', function () {
        //    var cellData = dt.row($(this).parents('tr')).data();
        //    var SKUCode = cellData[1];
        //    SKUCode = SKUCode.trim();
        //    showQuestion($(this), SKUCode);
        //});

        //$('#datatable12 tbody').on('mouseout', '.trends', function () {
        //    $('.SKUModalclose').trigger("click");
        //});
        $('#SelectedCategories').multiselect({
            includeSelectAllOption: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '100%',
            maxHeight: 150,
            enableFiltering: true
        });
        $('#SelectedTopItems').multiselect({
            includeSelectAllOption: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '100%',
            maxHeight: 150,
            enableFiltering: true
        });
        $('#SelectedBrand').multiselect({
            includeSelectAllOption: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '100%',
            maxHeight: 150,
            enableFiltering: true
        });
        $('#SelectedTypes').multiselect({
            includeSelectAllOption: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '100%',
            maxHeight: 150,
            enableFiltering: true
        });

        $("#SelectedTypes").change(function () {
                var SelectedItemTypes = $(this).val()
                $.ajax({
                    url: '@Url.Action("GetCatgoriesForItemTypes", "Order")',
                    type: 'POST',
                    dataType: "JSON",
                    data: {
                        "SelectedItemTypes": SelectedItemTypes
                    },
                    success: function (result) {
                        $("#SelectedCategories").html("");
                        var markup = "";
                        for (var x = 0; x < result.data.length; x++) {
                            markup += "<option value=" + result.data[x].Id + ">" + result.data[x].CategoryName + "</option>";
                        }
                        $("#SelectedCategories").html(markup);
                        $("#SelectedCategories").multiselect('destroy');
                        $('#SelectedCategories').multiselect({
                            includeSelectAllOption: true,
                            enableCaseInsensitiveFiltering: true,
                            buttonWidth: '100%',
                            maxHeight: 150,
                            enableFiltering: true
                        });
                        $("#SelectedCategories").trigger("change");
                    },
                    error: function (reponse) {
                        alert("error : " + reponse)
                    },
                });
            });
        $('.SKUModalclose').click(function (e) {
            e.stopPropagation();
            $(this).parent().hide();
            $('.items').removeClass('no-effect');
        });


        $('#SearchForm').submit(function (e) {
            var data = dt.$('input').serialize();
            var Validate = ValidateData(data);
            if (Validate) {
                e.preventDefault();
                alert("Please Save/Finalise Order First.");
            }
        });
    });
    var productlist = [];
    function CheckQty(MaximumOrderLimit, ItemId, CaseSize,OriginalQuantity, MinimumOrderQuantity, UOM) {
        var id = "#Qty" + ItemId;
        var value = $(id).val();
        var value2 = parseInt(value);
        if (value2 != 0) {
            if (value2 < parseInt(MinimumOrderQuantity) && value2 > 0) {
                alert("QUANTITY IS LESS THAN MOQ.");
                $(id).val(0);
            }
            else if (value2 < 0) {
                alert("QUANTITY IS LESS THAN ZERO.");
                $(id).val(0);
            }
            else if (value2 < parseInt(CaseSize) && UOM=='CASE') {
                alert("QUANTITY IS LESS THAN CASESIZE.");
                $(id).val(0);
            }
            else if (MaximumOrderLimit != 0 && MaximumOrderLimit != null && value2 > parseInt(MaximumOrderLimit)) {
                alert("MAXIMUM ORDER LIMIT FOR THIS SKU IS: "+ MaximumOrderLimit+".");
                $(id).val(MaximumOrderLimit);
            }
        }
        }
    
        function ValidateData(data) {
            var objs = [], temp;
            var temps = data.split('&');
            for (var i = 0; i < temps.length; i++) {
                temp = temps[i].split('=');
                if (temp[1] > 0 && temp[1] != undefined)
                    return true;
            }
        }
    function AddNew() {
        //ConfirmDialog("are You sure?")

        $(".loader").show();
            var tableinfo = CreateOrdertable.page.info();
            total = tableinfo.recordsTotal
            productlist = [];
            for (i = 0; i < total; i++){
                var data = CreateOrdertable.cell(i, 7).nodes().to$().find('input').val();
                var value = parseInt(data);
                var da = CreateOrdertable.row(i).data();
                //if (value > 0 && (value <= da.MaximumOrderLimit && da.MaximumOrderLimit != 0)) {
                if (value > 0) {
                    var product = {};
                    product.ProductId = parseInt(da.Id);
                    product.Qty = data;
                    product.ItemCode = da.SKUCode;
                    product.ItemDesc = da.SKUName;
                    product.IsMaximumOrderLimitCrossed = da.MaximumOrderLimit === 0 ? false : ((value > da.MaximumOrderLimit)?true:false);
                    productlist.push(product);
                }
                //else if (value > 0 && (value > da.MaximumOrderLimit && da.MaximumOrderLimit == 0)) {
                //    var product = {};
                //    product.ProductId = parseInt(da.Id);
                //    product.Qty = data;
                //    product.ItemCode = da.SKUCode;
                //    product.ItemDesc = da.SKUName;
                //    productlist.push(product);
                //}
        }            
        if (productlist.length > 0) {
            var orderProcess = true;
            var MaximumOrderLimitCrossed = productlist.some(e => e.IsMaximumOrderLimitCrossed === true);
            if (MaximumOrderLimitCrossed) {
                orderProcess = confirm("ORDER QUANTITY IS GREATER THAN MAXIMUM ORDER LIMIT.\n Are you sure want to order?");
            }
                if (orderProcess) {
                      $.ajax({
                url: "@Url.Action("SaveOrFinaliseOrder", "Order")",
                type: "POST",
                data: {
                        "order": productlist,
                    "issave": "Save"
                },
                success: function (response) {
                        if (response) {
                            productlist = [];
                            alert("ORDER SAVED AS DRAFT.");
                            window.location.href = '@Url.Action("OrderNew", "Order")';
                        }
                    }
                });
                }                      
            }
            else {
                alert("PLEASE SELECT ORDER");
            }
        }

</script>