@using DAL;
@model InvoiceHeader
@{
    ViewBag.Title = "POD";
    Layout = null;
    string vehicleno = Convert.ToString(ViewBag.VehicleNo);
}
<link href="~/Content/vendors/jquery-ui/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Content/vendors/jquery-ui/jquery-ui.js"></script>
<script src="~/Content/vendors/jquery-ui/jquery-ui.min.js"></script>

<script src="~/Content/vendors/datatables.net/js/jquery.dataTables.min.js"></script>

<style>
    .dtHorizontalVerticalExampleWrapper {
        max-width: 600px;
        margin: 0 auto;
    }

    .dataTables_filter {
        width: auto;
        float: right;
    }

    .dataTables_length {
        width: auto;
        float: left;
    }

    #datatable12 th, td {
        white-space: nowrap;
    }

    table.dataTable thead .sorting:after,
    table.dataTable thead .sorting:before,
    table.dataTable thead .sorting_asc:after,
    table.dataTable thead .sorting_asc:before,
    table.dataTable thead .sorting_asc_disabled:after,
    table.dataTable thead .sorting_asc_disabled:before,
    table.dataTable thead .sorting_desc:after,
    table.dataTable thead .sorting_desc:before,
    table.dataTable thead .sorting_desc_disabled:after,
    table.dataTable thead .sorting_desc_disabled:before {
        bottom: .5em;
    }
</style>
<style>
    .checkbox input[type=checkbox] {
        margin-left: 0px;
    }
    /* -- quantity box -- */

    .quantity {
        display: inline-block;
    }

        .quantity .input-text.qty {
            width: 35px;
            height: 39px;
            padding: 0 5px;
            text-align: center;
            background-color: transparent;
            border: 1px solid #efefef;
        }

        .quantity.buttons_added {
            text-align: left;
            position: relative;
            white-space: nowrap;
            vertical-align: top;
        }

            .quantity.buttons_added input {
                display: inline-block;
                margin: 0;
                vertical-align: top;
                box-shadow: none;
            }

            .quantity.buttons_added .minus,
            .quantity.buttons_added .plus {
                padding: 7px 10px 8px;
                height: 41px;
                background-color: #ece6e6;
                border: 1px solid #efefef;
                cursor: pointer;
            }

            .quantity.buttons_added .minus {
                border-right: 0;
            }

            .quantity.buttons_added .plus {
                border-left: 0;
            }

                .quantity.buttons_added .minus:hover,
                .quantity.buttons_added .plus:hover {
                    background: #eeeeee;
                }

        .quantity input::-webkit-outer-spin-button,
        .quantity input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            -moz-appearance: none;
            margin: 0;
        }

        .quantity.buttons_added .minus:focus,
        .quantity.buttons_added .plus:focus {
            outline: none;
        }
</style>
<script>
    function wcqib_refresh_quantity_increments() {
        jQuery("div.quantity:not(.buttons_added), td.quantity:not(.buttons_added)").each(function (a, b) {
            var c = jQuery(b);
            c.addClass("buttons_added"), c.children().first().before('<input type="button" value="-" class="minus" />'), c.children().last().after('<input type="button" value="+" class="plus" />')
        })
    }
    String.prototype.getDecimals || (String.prototype.getDecimals = function () {
        var a = this,
            b = ("" + a).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
        return b ? Math.max(0, (b[1] ? b[1].length : 0) - (b[2] ? +b[2] : 0)) : 0
    }), jQuery(document).ready(function () {
        wcqib_refresh_quantity_increments()
    }), jQuery(document).on("updated_wc_div", function () {
        wcqib_refresh_quantity_increments()
    }), jQuery(document).on("click", ".plus, .minus", function () {

        var a = jQuery(this).closest(".quantity").find(".qty"),
            b = parseFloat(a.val()),
            c = parseFloat(a.attr("max")),
            d = parseFloat(a.attr("min")),
            e = a.attr("step");
        b && "" !== b && "NaN" !== b || (b = 0), "" !== c && "NaN" !== c || (c = ""), "" !== d && "NaN" !== d || (d = 0), "any" !== e && "" !== e && void 0 !== e && "NaN" !== parseFloat(e) || (e = 1), jQuery(this).is(".plus") ? c && b >= c ? a.val(c) : a.val((b + parseFloat(e)).toFixed(e.getDecimals())) : d && b <= d ? a.val(d) : b > 0 && a.val((b - parseFloat(e)).toFixed(e.getDecimals())), a.trigger("change")
        x.stopPropagation();
        x.preventDefault();
        return false;

    });
</script>
<script>
    var dt;
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }
    function CheckQty(e, e1) {
        var id = "#Qty" + e1;
        var value = $(id).val();
        if (parseInt(value) > parseInt(e)) {
            alert("Quantity is greater than order limit");
            $(id).val(e);
        }
    }

    $(document).ready(function () {
        $(".loader").hide();
        var formWidth = document.getElementById("_validateXTMInvoice").offsetWidth;
        document.getElementById("abc").width = formWidth;

       $('#datatable12').DataTable({
           "scrollX": formWidth,
           "scrollY": true,
        });
        $('.dataTables_length').addClass('bs-select');
        dt = $('#datatable12').DataTable().rows().iterator('row', function (context, index) {
            var node = $(this.row(index).node());
        });

        (function ($) {
            $.fn.inputFilter = function (inputFilter) {
                return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function () {
                    if (inputFilter(this.value, this.max)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    } else if (this.hasOwnProperty("oldValue")) {
                        this.value = this.oldValue;
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    }
                });
            };
        }(jQuery));
        $(".integer").inputFilter(function (value, maxvalue) {
            return /^\d*$/.test(value) && (value === "" || parseInt(value) <= maxvalue);
        });
    });

    //-----------------------------
    if ($('#ddlstatus').val() == 3) {
        
        $('#datatable12').find('.qty').prop("disabled", false);
        $('#datatable12').find('.minus').prop("disabled", false);
        $('#datatable12').find('.plus').prop("disabled", false);
        $('#datatable12').find('.innerReason').prop("disabled", false);
    }
    //------------------------------
    if ("@ViewBag.PODHeaderId" != 0) {
        $('#pod_submit').show();
    }
    else {
        $('#pod_submit').hide();
    }
    function AddPODDetails() {
        var ino = "@ViewBag.InvoiceNo";
        var InvoiceDispatchId = "@ViewBag.InvoiceDispatchId";
        if ("@ViewBag.PODHeaderId" != 0) {
              PODHeaderId = "@ViewBag.PODHeaderId";
        } else {
            PODHeaderId = $('#PODHeaderId').val();
        }
        var form = $('#_validateXTMInvoice');
        var fileData = new FormData();
        var tableinfo = dt.page.info();
        total = tableinfo.recordsTotal
        InvoiceDetailList = [];
        
        for (i = 0; i < total; i++)
        {
            var data = dt.$('input[id=Qty' + (i) + ']').val();
            var No = dt.$('input[id=No' + (i) + ']').val();
            var Reason = dt.$('select[id=Reason' + (i) + ']').val();
            var da = dt.row(i).data();
            var InvoiceDetail = {};
            InvoiceDetail.ItemCode = da[0];
            fileData.append("InvoiceDetails[" + i + "].ItemCode", da[0]);

            InvoiceDetail.Id = No;
            fileData.append("InvoiceDetails[" + i + "].Id", No);

            InvoiceDetail.DispatchQty = parseInt(da[2]);
            fileData.append("InvoiceDetails[" + i + "].DispatchQty", parseInt(da[2]));

            InvoiceDetail.DeliveredQty = data;
            fileData.append("InvoiceDetails[" + i + "].DeliveredQty", data);

            InvoiceDetail.Reason = Reason;
            fileData.append("InvoiceDetails[" + i + "].Reason", Reason);
            InvoiceDetailList.push(InvoiceDetail);
        }
        fileData.append("InvoiceNo", ino);
        fileData.append("InvoiceDispatchId", InvoiceDispatchId);
        fileData.append("PODHeaderId", PODHeaderId);
        //fileData.append('SignatureDataUrl',SignatureDataUrl);
        if (InvoiceDetailList.length > 0) {
                    $.ajax({
                        url: "@Url.Action("PODDetails", "Order")",
                        type: "POST",
                        data: fileData,
                        dataType: 'json',
                        contentType: false,
                        processData: false,
                        error: function (error) {
                            console.log(error);
                                alert("unable to save.");
                        },
                        success: function (response) {
                            alert("SAVED SUCCESSFULLY");
                           window.location = "@Url.Action("PODList", "Order")";

                        }
                    });
        }
        else
        {
            $(".loader").hide();
            $('#Draftbtn').prop('disabled', false);
            $('#Finalisebtn').prop('disabled', false);
        }
    }
</script>
<div role="main" id="abc">
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_content">
                    <form class="" id="_validateXTMInvoice">
                        <div class="row form-group">
                            <div class="clearfix"></div>
                            <div>
                                <table id="datatable12" class="table table-striped table-bordered table-sm" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <th>Item Code</th>
                                            <th>Item Description</th>
                                            <th>Quantity</th>
                                            <th>Delivered Quantity</th>
                                            <th>Reasons</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model != null && Model.InvoiceDetails.Count() > 0)
                                        {
                                            int i = 0;
                                            foreach (InvoiceDetail item in Model.InvoiceDetails)
                                            {

                                                <tr>
                                                    <td>@item.Item</td>
                                                    <td>@item.Description</td>
                                                    <td>@item.Quantity</td>
                                                    <td>
                                                        <div class="quantity buttons_added">
                                                            <input type="button" value="-" class="minus" disabled>
                                                            <input type="number" step="1" id="@("Qty"+i)" onblur="CheckQty(@item.Quantity,@i)" min="0" max="@item.Quantity" name="quantity" value="@(item.Quantity!=null?item.Quantity.ToString():"")" title="Qty" class="input-text qty text" size="6" pattern="" inputmode="" disabled>
                                                            <input type="button" value="+" class="plus" disabled>
                                                        </div>
                                                        <input type="text" value="@item.Id" id="@("No"+i)" style="display:none" />
                                                    </td>
                                                    <td>
                                                        @Html.DropDownList("Reason" + i, (SelectList)ViewBag.Resons, "Select", new { @class = "form-control innerReason", @disabled = "disabled" })
                                                    </td>
                                                </tr>
                                                i++;
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>&nbsp;
                            <br />
                            <div class="col-md-12">
                                <button type="button" id="pod_submit" class="btn btn-primary " onclick="AddPODDetails()">Save</button>
                            </div>
                        </div>
                        <input type="hidden" class="form-control" id="PODHeaderId">
                    </form>
                </div>
            </div>
        </div>
    </div>

</div>



