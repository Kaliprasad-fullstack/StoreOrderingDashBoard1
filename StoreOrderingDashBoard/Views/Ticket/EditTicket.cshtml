@model DAL.TicketGenration
@{
    /**/

    ViewBag.Title = "EditTicket";
    if (StoreOrderingDashBoard.Models.SessionValues.RoleId == 2)
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}

<div class="right_col" role="main">
    <div class="row">
        <div class="page-title">
            <div class="title_left">
                <h3>Edit Ticket</h3>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_title">

                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                        </ul>

                        <div class="clearfix"></div>
                        @*<a class="btn btn-success datatable-btn" href="@Url.Action("EditStore","Store")">Edit</a>*@
                    </div>
                    <div class="x_content">
                        @*<form id="demo-form2" data-parsley-validate class="form-horizontal form-label-left" action="@Url.Action()" method="post">*@
                        @using (Html.BeginForm("EditTicket", "Ticket", FormMethod.Post, new { @class = "form-horizontal form-label-left", enctype = "multipart/form-data" }))
                        {


                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(x => x.TicketId)
                            <div class="form-group">
                                @Html.Label("Ticket Type", htmlAttributes: new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.DropDownListFor(model => model.TicketTypeId, new SelectList(ViewBag.TicketTypeName, "TicketTypeId", "TicketTypeName"), "Select Ticket Type", (StoreOrderingDashBoard.Models.SessionValues.RoleId == 2 ? (object)new { @class = "form-control  col-md-7 col-xs-12", disabled = "disabled" } : new { @class = "form-control  col-md-7 col-xs-12" }))

                                    @*@Html.DropDownListFor(model => model.TicketType, ViewBag.TicketTypeName as SelectList, "Select product", new { htmlAttributes = new { @class = "form-control  col-md-7 col-xs-12", size = "5" } })*@
                                    @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Order No", htmlAttributes: new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.OrderNo, (StoreOrderingDashBoard.Models.SessionValues.RoleId == 2 ? (object)new { @class = "form-control col-md-7 col-xs-12", disabled = "disabled" } : new { @class = "form-control col-md-7 col-xs-12" }))
                                    @Html.ValidationMessageFor(model => model.OrderNo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @*<div class="form-group">
                                    @Html.HiddenFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        @Html.HiddenFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control  col-md-7 col-xs-12" } })
                                        @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            @*<div class="form-group">
                                    @Html.HiddenFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        @Html.HiddenFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control  col-md-7 col-xs-12" } })
                                        @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            <div class="form-group">
                                @Html.Label("Contact No", htmlAttributes: new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.ContactNo, (StoreOrderingDashBoard.Models.SessionValues.RoleId == 2 ? (object)new { @class = "form-control col-md-7 col-xs-12", disabled = "disabled" } : new { @class = "form-control col-md-7 col-xs-12" }))

                                    @*@Html.TextBoxFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12" } })*@
                                    @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Ticket Description", htmlAttributes: new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextAreaFor(model => model.Description, (StoreOrderingDashBoard.Models.SessionValues.RoleId == 2 ? (object)new { @class = "form-control col-md-7 col-xs-12", disabled = "disabled" } : new { @class = "form-control col-md-7 col-xs-12" }))

                                    @*@Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control  col-md-7 col-xs-12", style = "width: 900px;" } })*@
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Ticket Raised By", htmlAttributes: new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.TicketRaisedBy, (StoreOrderingDashBoard.Models.SessionValues.RoleId == 2 ? (object)new { @class = "form-control col-md-7 col-xs-12", disabled = "disabled" } : new { @class = "form-control col-md-7 col-xs-12" }))

                                    @*@Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control  col-md-7 col-xs-12", style = "width: 900px;" } })*@
                                    @Html.ValidationMessageFor(model => model.TicketRaisedBy, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            if (StoreOrderingDashBoard.Models.SessionValues.RoleId == 1)
                            {
                                <div class="form-group">
                                    @Html.Label("Upload Image", htmlAttributes: new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        @*@Html.TextBoxFor(model => model.ImageFile, new { type = "file", accept = "image/*", @class = "form-control col-md-7 col-xs-12" })*@
                                        <input type="file" class="form-control" name="ImageFile" multiple="multiple" accept="image/png, image/gif, image/jpeg" />
                                        @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }

                            if (StoreOrderingDashBoard.Models.SessionValues.RoleId == 2)
                            {
                                <div class="form-group">
                                    @Html.Label("Ticket Status", htmlAttributes: new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        @(Html.DropDownListFor(mbox => mbox.TicketStatus, new SelectList(ViewBag.Status, "Value", "Text"), new { @class = "form-control", required = "required" }))
                                        @Html.ValidationMessageFor(model => model.TicketStatus, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="form-group">
                                    @Html.Label("Admin Remark", htmlAttributes: new { @class = "control-label col-md-3 col-sm-6 col-xs-12" })
                                    <div class="col-md-6 col-sm-6 col-xs-12">
                                        @*@Html.DropDownListFor(model => model.AdminRemark, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @(Html.TextAreaFor(mbox => mbox.AdminRemark, new { @class = "form-control", required = "required" }))
                                        @Html.ValidationMessageFor(model => model.AdminRemark, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <br />
                                    <input type="submit" value="Save" class="btn btn-success dataTable-btn" />&nbsp; &nbsp;
                                    @*@Html.ActionLink("Cancel", "TicketList", "Ticket", new { @class = "btn btn-danger" }) <br />*@

                                </div>
                            </div>
                        }

                    </div>

                </div>
                @if (Model.TicketImages != null && Model.TicketImages.Count > 0)
                {
                <div class="x_panel">
                    <div class="x_title">
                        <div>
                            Ticket Images
                        </div>

                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                        </ul>

                        <div class="clearfix"></div>
                        @*<a class="btn btn-success datatable-btn" href="@Url.Action("EditStore","Store")">Edit</a>*@
                    </div>
                    <div class="x_content">

                        <style>
                            .no-bullets {
                                list-style-type: none;
                            }

                            .d-flex {
                                display: flex;
                                flex-direction: row;
                                flex-wrap: wrap;
                            }
                        </style>
                        @*<ul class="no-bullets">*@


                        @foreach (DAL.TicketImages img in Model.TicketImages)
                        {
                            @*<li class="fa-border " style="margin:10PX 0PX;">
                    <div class="row">
                        <div class="col-md-12">

                            <div class="img col-xs-1">
                                <div class="img-container">
                                    <img class="img img-circle profile_img" style="border-radius:5% !important;margin-bottom:10px;" src="@Url.Action("DownloadTicketImages", "Ticket", new { ImageFile = img.ImagePath, TicketId = img.TicketId })" />
                                </div>
                            </div>
                            <div class="desc col-xs-10">

                            </div>
                            <div class="x-mark col-xs-1">

                            </div>

                        </div>
                    </div>
                </li>*@
                            @*<a target="_blank" href="@Url.Action("DownloadTicketImages", "Ticket", new { ImageFile = img.ImagePath, TicketId = img.TicketId })">
                    <img style="width:20rem; height:20rem;" src="@Url.Action("DownloadTicketImages", "Ticket", new { ImageFile = img.ImagePath, TicketId = img.TicketId })" />
                </a>*@
                            <div class="col-md-55">
                                <div class="thumbnail">
                                    <div class="image view view-first">
                                        <img id="@("MD-" + Model.TicketImages.IndexOf(img))" style="width: 100%; display: block;" src="@Url.Action("DownloadTicketImages", "Ticket", new { ImageFile = img.ImagePath, TicketId = img.TicketId })" alt="image">
                                        <div class="mask" onclick="ViewImage('@("MD-" + Model.TicketImages.IndexOf(img))',@img.Id)">
                                            <p><br/><br /></p>
                                            <div class="tools tools-bottom">
                                                @*<a onclick="@Url.Action("DeleteTicketImage", "Ticket", new { ImageFile = img.ImagePath, TicketId = img.TicketId }))"><i class="fa fa-eye"></i></a>*@
                                            </div>
                                        </div>

                                    </div>
                                    <div class="caption">
                                        <p>
                                            <strong>@img.OriginalFileName</strong>
                                        </p>
                                        @*<button type="button" onclick="DeleteImage(@img.TicketId,@img.ImagePath)" class="btn btn-danger">delete Image</button>*@
                                    </div>
                                </div>
                            </div>
                        }
                        @*</ul>*@

                    </div>
                </div>
                }
            </div>
        </div>




    </div>
</div>
<div class="modal fade" id="Image_Model" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Image Details </h4>
            </div>
            <div class="modal-body">
                <div id="partial" style="min-height:130px"></div>
                @Html.Hidden("HdnDelImageId")
            </div>
            <div class="modal-footer">
                @if (StoreOrderingDashBoard.Models.SessionValues.RoleId == 1 && Model.TicketStatus=="Open")
                {
                    <button type="button" class="btn btn-danger pull-left" onclick="DeleteImage('HdnDelImageId')">Delete Image</button>
                }
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
<script>
    document.getElementById('ticketForm').addEventListener('submit', function (event) {
        event.preventDefault();
        // Handle form submission here
        // You can access form fields using document.getElementById or other methods
    });
    function ViewImage(imgid, Id) {
        LoaderDiv = '<div class="loader">';
        $('#partial').html(LoaderDiv);
        $('input[name="HdnDelImageId"]').val(Id);
        $("#Image_Model").modal('show');
        let imgurl = $("#" + imgid).attr('src');
        LoaderDiv = '<img src="' + imgurl + '"/>'
        $('#partial').html(LoaderDiv);
    }
    function DeleteImage(ImageId){
        
        let DeImageId = $('input[name="' + ImageId + '"]').val();
        let _token = $('input[name="__RequestVerificationToken"]').val();
        let TicketId = '@Model.TicketId';
        $.post('@Url.Action("DeleteImageFile","Ticket")', { ImageId: DeImageId, TicketId: TicketId, __RequestVerificationToken: _token },
            function (result) {
                if (result.Created) {
                    //window.location.href = '@Url.Action("EditTicket","Ticket",new { TicketId=Model.TicketId})';
                    window.location.href = '@Url.Action("Index","Ticket")';
                }
                else {
                    alert(result.Message)
                }
            }).fail(function () {
                console.log("error");
            });
    }
</script>



