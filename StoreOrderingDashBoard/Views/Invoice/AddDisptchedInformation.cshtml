@using DAL;
@model List<string>
@{
    ViewBag.Title = "AddDisptchedInformation";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<!-- page content -->
<div class="right_col" role="main">
    <div id="">
        <div class="page-title">
            <div class="title_left">
                <h3>Add Disptch Information</h3>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_content">
                        <form id="_XHTDispatchInfokey">
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.AntiForgeryToken()
                                    <label for="SelectedDCs">location <span class="required">*</span></label>
                                    @(Html.DropDownList("SelectedDCs", new SelectList(Model.Select(x => new { Value = x, Text = x }), "Value", "Text"), new { @class = "form-control", required = "required" }))
                                </div>
                                <div class="col-md-4">
                                    <label for="Categories">Date <span class="required">*</span></label>

                                    <div class="form-group">
                                        <div class="input-group date" id="InvoiceDateDRP">
                                            <input type="text" class="form-control" id="InvoiceDate" name="InvoiceDate" />
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col-md-4">
                                    <button class="btn btn-primary" type="button" id="ViewInvoices" name="ViewInvoices">View Invoices</button>
                                </div>
                            </div>
                            <div class="ln_solid"></div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_content">
                        <table id="tblVehicleInvoices" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>Invoice No</th>
                                    <th>Vehicle No</th>
                                    @*<th>Dispatch Date</th>*@
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <div class="x_content">
                        <div class="buttons">
                            <!-- Standard button -->
                            <button type="button" class="btn btn-success btn-sm" id="SaveDisptchInformation">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var Table;
    $(document).ready(function () {
        $('#myDatepicker').datetimepicker();

        $('#InvoiceDateDRP').datetimepicker({
            format: 'YYYY-MM-DD',
            ignoreReadonly: true,
            allowInputToggle: true
        });
        Table = $("#tblVehicleInvoices").DataTable({
            scrollCollapse: true,
        });
        $("#ViewInvoices").on("click", function (event) {
            var $this = $(this);
            var form = $('#_XHTDispatchInfokey');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            if ($("#SelectedDCs").val() != "" && $("#InvoiceDate").val() != "" && $("#InvoiceDate").val() != "") {
                var SelectedDCs = $("#SelectedDCs").val();
                var InvoiceDate = $("#InvoiceDate").val();
                Table.destroy();
                Table = $("#tblVehicleInvoices").DataTable({
                    "ajax": {
                        "url": '@Url.Action("GetInvoicesforDateDC", "Invoice")',
                        "dataType": "JSON",
                        "type":"post",
                        "data": { SelectedDCs: SelectedDCs, InvoiceDate: InvoiceDate, __RequestVerificationToken: token}
                    },
                    "columns": [
                        {
                            "data": "Invoice No", "autoWidth": true,
                            render: function (data, type, row, meta) {
                                return '<p id="' + row.Id + '">' + row.Invoice_Number + '</p>';
                            }
                        },
                        {
                            "data": "Vehicle No", "autoWidth": true,
                            render: function (data, type, row, meta) {
                                return '<input type="text" class="form-control" id="VehicleNo' + row.Id + '" class="form-control" value="' + StringIsNull( row.VehicleNo )+ '" />';
                            }
                        }
                        //{
                        //    "data": "Dispatch Date", "autoWidth": true,
                        //    render: function (data, type, row, meta) {
                        //        //return '<input type="datetime-local"  class="form-control" id="DispatchDate' + row.Id + '" class="form-control" value="' + StringIsNull( row.DispatchDate )+ '" />';
                        //        return '<div class="input-group date myDatepicker"><input type="text"  id="DispatchDate' + row.Id + '" class="form-control" value="' + DateIsNull(row.DispatchDate) + '" /><span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span></div>'
                        //    }
                        //}
                    ],
                    "initComplete": function (settings, json) {
                        $('.myDatepicker').datetimepicker({
                            format: 'YYYY-MM-DD HH:mm',
                            ignoreReadonly: true,
                            allowInputToggle: true,
                        });
                    }
                });
            }
        });
    });
    function StringIsNull(string) {
        if (string == null || string == undefined)
            return "";
        else
            return string;
    }
    function DateIsNull(string) {
        if (string == null || string == undefined)
            return "";
        else
            return string.tostring('YYYY-MM-DD HH:mm');
    }
</script>
<script>
    $("#SaveDisptchInformation").on("click", function (event) {
        var $this = $(this);
        var rows = Table.rows().data().length;
        var form = $('#_XHTDispatchInfokey');
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        var tableinfo = Table.page.info();
        var rowLength = tableinfo.recordsTotal;
        var DisptchInformation = [];
        for (i = 0; i < rowLength; i++) {
            var InvoiceDispatch = {}
            var da = Table.row(i).data();
            var InvoiceNo = da.Invoice_Number;
            var VehicleNo = Table.$('input[id="VehicleNo' + da.Id + '"]').val();
            var DispatchDate = Table.$('input[id="DispatchDate' + da.Id + '"]').val();
            //var index = DispatchDate.indexOf(' ');
            //DispatchDate = DispatchDate.replaceAt(index, 'T') + "Z";
            //DispatchDate = new Date(DispatchDate);
            if (InvoiceNo != "" && VehicleNo != "" && DispatchDate != "") {
                InvoiceDispatch.DispatchDate = DispatchDate;
                InvoiceDispatch.VehicleNo = VehicleNo;
                InvoiceDispatch.InvoiceNo = InvoiceNo;
                DisptchInformation.push(InvoiceDispatch);

            }
            else {
                DisptchInformation = [];
                break;
            }
        }
             if (DisptchInformation.length == 0) {
                    alert("Please fill all fields.");
                }
             else{
                 $this.button('loading');
                 $("#SaveDisptchInformation").prop("disabled", true);
                    $(".loader").show();
                    $.ajax({
                        url: "@Url.Action("SaveDisptchInformation", "Invoice")",
                        type: "post",
                        cache: false,
                        datatype: "json",
                        data: {
                            "DisptchInformation": DisptchInformation,
                            "__RequestVerificationToken": token
                        },
                        success: function (response) {
                            $this.button('reset');
                            $(".loader").hide();
                            $("#SaveDisptchInformation").prop("disabled", false);
                            if (response == 'Unsuccessful') {
                                //OpenModel("AddEditCustomer", "Data not Saved.")
                                alert("Error encountered while saving...");
                            }
                            if (response == 'Successful') {
                                alert("data saved..");
                                Table.clear().draw();
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            $("#SaveDisptchInformation").prop("disabled", false);
                            $(".loader").hide();
                            $this.button('reset');
                            alert("Error encountered while saving...");
                        }
                    })
            }
    });
    String.prototype.replaceAt = function (index, replacement) {
        return this.substr(0, index) + replacement + this.substr(index + replacement.length);
    }
</script>